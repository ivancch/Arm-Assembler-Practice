


ARM Macro Assembler    Page 1 


    1 00000000         ; –û–±—ä—è–≤–∏—Ç—å –∫–æ–¥–æ–≤—É—é —Å–µ–∫—Ü–∏—é MyCode
    2 00000000                 AREA             MyCode, CODE, ReadOnly
    3 00000000         ; –û–±—ä—è–≤–∏—Ç—å —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è 
    4 00000000                 ENTRY
    5 00000000         ; –û–±—ä–≤–∏—Ç—å —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    6 00000000                 EXPORT           CopyRomRamWithLoop
    7 00000000         CopyRomRamWithLoop
    8 00000000         ; –û–±—è–≤–∏—Ç—å –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π N_32
    9 00000000         ; "–ß–∏—Å–ª–æ —Å–ª–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ"
   10 00000000 00000004 
                       N_32    EQU              4
   11 00000000         ; –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–∑–≤–∞—Ç—å –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º—É 
   12 00000000         ; –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —Å–ª–æ–≤
   13 00000000 A020            ADR              r0, A_ROM
   14 00000002 492B            LDR              r1, =A_RAM
   15 00000004 F04F 0204       MOV              r2, #N_32
   16 00000008         
   17 00000008         ; –í–∞—Ä–∏–∞–Ω—Ç 1
   18 00000008         ; –í—ã–≥—Ä—É–∑–∫–∞ –ø–æ —Å–ª–æ–≤—É
   19 00000008         ;   B Copy_Rom_Ram1
   20 00000008         
   21 00000008         ; –í–∞—Ä–∏–∞–Ω—Ç 2
   22 00000008         ; –í—ã–≥—Ä—É–∑–∫–∞ –ø–æ –ø–æ–ª—É—Å–ª–æ–≤—É
   23 00000008         ; –£–º–Ω–æ–∂–∞–µ–º —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ 2
   24 00000008         ; –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–ª—É—Å–ª–æ–≤–∞
   25 00000008         ;   MOV r2, r2, LSL #1 ; N_32 * 2
   26 00000008         ;   B Copy_Rom_Ram2
   27 00000008         
   28 00000008         ; –í–∞—Ä–∏–∞–Ω—Ç 3
   29 00000008         ; –í—ã–≥—Ä—É–∑–∫–∞ –ø–æ –±–∞–π—Ç—É
   30 00000008         ; –£–º–Ω–æ–∂–∞–µ–º —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ 4
   31 00000008         ; –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –±–∞–π—Ç—ã
   32 00000008         ;   MOV r2, r2, LSL #2 ; N_32 * 4
   33 00000008         ;   B Copy_Rom_Ram3
   34 00000008         
   35 00000008         ; –í–∞—Ä–∏–∞–Ω—Ç 4
   36 00000008         ; –ü–µ—Ä–µ—Å—Ç—Ä–æ–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ü–∏–∫–ª–∞
   37 00000008         ; —Å –ø—Ä–µ-–ø—Ä–æ–≤–µ—Ä–∫–æ–π —É—Å–ª–æ–≤–∏—è
   38 00000008         ;   B Copy_Rom_Ram4
   39 00000008         
   40 00000008         ; –í–∞—Ä–∏–∞–Ω—Ç 5
   41 00000008         ; –°—á–∏—Ç–∞—Ç—å –¥–≤–æ–π–Ω—ã–µ —Å–ª–æ–≤–∞, —Å–ª–æ–∂–∏—Ç—å –∏—Ö,
   42 00000008         ; –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å
   43 00000008 4B2A            LDR              r3, =Result_of_addition
   44 0000000A EA4F 0252       MOV              r2, r2, LSR #1 ; N_32 / 2
   45 0000000E E024            B                Copy_Rom_Ram5
   46 00000010         
   47 00000010         ; –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä—É–π—Ç–µ –≤ –∫–æ–¥–æ–≤–æ–π —Å–µ–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫—É —Å–∏–º–≤–æ–ª–æ–≤ ‚ÄúPrivet ARM Cor
                       tex-M4F CPU‚Äù c
   48 00000010         ; –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–∏—Ä–µ–∫—Ç–∏–≤—ã DCB. –í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–∑–Ω–∞–∫–∞ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä
                       –æ–∫–∏ (–ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª—è 
   49 00000010         ; —Å—Ç—Ä–æ–∫–∏) –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω—É–ª–µ–≤–æ–π –±–∞–π—Ç 0. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º—É –
                       ∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –û–ó–£ 
   50 00000010         ; —Å—Ç—Ä–æ–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤ –ª—é–±–æ–π –¥–ª–∏–Ω—ã, –∫–æ–Ω—á–∞—é—â–µ–π—Å—è ¬´–ø—Ä–µ—Ä—ã–≤–∞—Ç–µ–ª–µ–º¬ª. –
                       ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–µ 
   51 00000010         ; —Ä–∞–±–æ—Ç—É –≤ –æ—Ç–ª–∞–¥—á–∏–∫–µ. 
   52 00000010         ;   ADR r0, ROM_string1
   53 00000010         ;   LDR r1, =RAM_string1
   54 00000010         ;   B Copy_Rom_Ram6



ARM Macro Assembler    Page 2 


   55 00000010         
   56 00000010         Back
   57 00000010         ; –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
   58 00000010 4770            BX               lr
   59 00000012         ; ********************************************
   60 00000012         ; –ü–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤ –∏–∑ –ü–ó–£ –≤ –û–ó–£
   61 00000012         ; –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
   62 00000012         ; r0 - –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –º–∞—Å—Å–∏–≤–∞ —Å–ª–æ–≤ –≤ –ü–ó–£
   63 00000012         ; r1 - –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –º–∞—Å—Å–∏–≤–∞ —Å–ª–æ–≤ –≤ –û–ó–£
   64 00000012         ; r2 - —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
   65 00000012         ; –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä—ã:
   66 00000012         ; r3 - –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ª–æ–≤
   67 00000012         ; ********************************************
   68 00000012         ; –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º—É
   69 00000012         Copy_Rom_Ram1
   70 00000012         ; C—á–∏—Ç–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ –∏–∑ –ü–ó–£ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –û–ó–£
   71 00000012         ; —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∞–∑–æ–≤–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ —Å –ø–æ—Å—Ç-—Å–º–µ—â–µ–Ω–∏–µ–º
   72 00000012 F850 3B04       LDR              r3, [r0], #4
   73 00000016 F841 3B04       STR              r3, [r1], #4
   74 0000001A         ; –î–µ–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—á–µ—Ç—á–∏–∫ —á–∏—Å–ª–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
   75 0000001A F1A2 0201       SUB              r2, #1
   76 0000001E         ; –°—Ä–∞–≤–Ω–∏—Ç—å —Å –Ω—É–ª–µ–º (–≤—Å–µ –ª–∏ —Å–ª–æ–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã?)
   77 0000001E 2A00            CMP              r2, #0
   78 00000020         ; –ï—Å–ª–∏ –Ω–µ –≤—Å–µ - –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
   79 00000020 D1F7            BNE              Copy_Rom_Ram1
   80 00000022         ; –í—Å–µ —Å–ª–æ–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
   81 00000022 E7F5            B                Back
   82 00000024         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 1  *****
   83 00000024         ; ***** –ù–∞—á–∞–ª–æ –í–∞—Ä–∏–∞–Ω—Ç–∞ 2 *****
   84 00000024         Copy_Rom_Ram2
   85 00000024 F830 3B02       LDRH             r3, [r0], #2
   86 00000028 F821 3B02       STRH             r3, [r1], #2
   87 0000002C F1A2 0201       SUB              r2, #1
   88 00000030 2A00            CMP              r2, #0
   89 00000032 D1F7            BNE              Copy_Rom_Ram2
   90 00000034         ; –í—Å–µ —Å–ª–æ–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã, –≤–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
   91 00000034 E7EC            B                Back
   92 00000036         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 2  *****
   93 00000036         ; ***** –ù–∞—á–∞–ª–æ –í–∞—Ä–∏–∞–Ω—Ç–∞ 3 *****
   94 00000036         Copy_Rom_Ram3
   95 00000036 F810 3B01       LDRB             r3, [r0], #1
   96 0000003A F801 3B01       STRB             r3, [r1], #1
   97 0000003E F1A2 0201       SUB              r2, #1
   98 00000042 2A00            CMP              r2, #0
   99 00000044 D1F7            BNE              Copy_Rom_Ram3
  100 00000046 E7E3            B                Back
  101 00000048         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 3  *****
  102 00000048         ; ***** –ù–∞—á–∞–ª–æ –í–∞—Ä–∏–∞–Ω—Ç–∞ 4 *****
  103 00000048         Copy_Rom_Ram4
  104 00000048         ; –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ —Ä–µ–≥–∏—Å—Ç—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è r3
  105 00000048         ; —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –Ω–µ—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
  106 00000048         ; c —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ñ–ª–∞–≥–æ–≤ (—Å—É—Ñ—Ñ–∏–∫—Å "S")
  107 00000048 0013            MOVS             r3, r2
  108 0000004A         ; –ï—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã, –≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º—ã
  109 0000004A D0E1            BEQ              Back
  110 0000004C         ; C—á–∏—Ç–∞—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–π—Ç –∏–∑ –ü–ó–£ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –û–ó–£
  111 0000004C         ; —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∞–∑–æ–≤–æ–π –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ —Å –ø–æ—Å—Ç-—Å–º–µ—â–µ–Ω–∏–µ–º
  112 0000004C F850 3B04       LDR              r3, [r0], #4
  113 00000050 F841 3B04       STR              r3, [r1], #4



ARM Macro Assembler    Page 3 


  114 00000054         ; –î–µ–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—á–µ—Ç—á–∏–∫ —á–∏—Å–ª–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
  115 00000054 F1A2 0201       SUB              r2, #1
  116 00000058         ; –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω–∞—á–∞–ª–æ –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º—ã
  117 00000058 E7F6            B                Copy_Rom_Ram4
  118 0000005A         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 4  *****
  119 0000005A         ; ***** –ù–∞—á–∞–ª–æ –í–∞—Ä–∏–∞–Ω—Ç–∞ 5 *****
  120 0000005A         Copy_Rom_Ram5
  121 0000005A         ; –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–∏–∫–ª–∞
  122 0000005A 0012            MOVS             r2, r2
  123 0000005C D0D8            BEQ              Back
  124 0000005E         ; –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã: —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
  125 0000005E         ; –ò —Å–ª–æ–∂–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–æ–±–æ–π –¥–≤–æ–π–Ω—ã—Ö —Å–ª–æ–≤
  126 0000005E E8F0 4502       LDRD             r4, r5, [r0], #8
  127 00000062 E8E1 4502       STRD             r4, r5, [r1], #8
  128 00000066 EB04 0605       ADD              r6, r4, r5
  129 0000006A F843 6B04       STR              r6, [r3], #4
  130 0000006E F1A2 0201       SUB              r2, #1
  131 00000072 E7F2            B                Copy_Rom_Ram5
  132 00000074         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 5  *****
  133 00000074         ; ***** –ù–∞—á–∞–ª–æ –í–∞—Ä–∏–∞–Ω—Ç–∞ 6 *****
  134 00000074         Copy_Rom_Ram6
  135 00000074 F810 2B01       LDRB             r2, [r0], #1
  136 00000078 F801 2B01       STRB             r2, [r1], #1
  137 0000007C 2A00            CMP              r2, #0
  138 0000007E D0C7            BEQ              Back
  139 00000080 E7F8            B                Copy_Rom_Ram6
  140 00000082         ; ***** –ö–æ–Ω–µ—Ü –í–∞—Ä–∏–∞–Ω—Ç–∞ 6  *****
  141 00000082         
  142 00000082 00 00           ALIGN
  143 00000084         
  144 00000084         ; –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç –≤ —Ç–µ–∫—É—â–µ–π –∫–æ–¥–æ–≤–æ–π —Å–µ–∫—Ü–∏–∏
  145 00000084         A_ROM
  146 00000084 7788FFAA 
                       Const_0 DCD              0x7788FFAA
  147 00000088 22221111 
                       Const_1 DCD              0x22221111
  148 0000008C 22 00 23 
              00       Const_2 DCW              34,35
  149 00000090 01 02 03 
              04       Condt_3 DCB              1,2,3,4
  150 00000094         
  151 00000094 50 72 69 
              76 65 74 
              20 41 52 
              4D 20 43 
              6F 72 74 
              65 78 2D 
              4D 34 46 
              20 43 50 
              55 00    ROM_string1
                               DCB              "Privet ARM Cortex-M4F CPU", 0
  152 000000AE 00 00           ALIGN
  153 000000B0         
  154 000000B0         ; –û–±—ä—è–≤–∏—Ç—å —Å–µ–∫—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
  155 000000B0 00000000 
              00000000         AREA             MyData, DATA, ReadWrite
  156 00000000         ; –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –≤ –Ω–µ–π 100 —Å–ª–æ–≤
  157 00000000 00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00       A_RAM   SPACE            4*N_32      ; –î–ª—è 4-—Ö –∫–æ–Ω—Å—Ç–∞—Ç
  158 00000010         Result_of_addition
  159 00000010 00 00 00 
              00 00 00 
              00 00            SPACE            2*N_32      ; –î–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–ª–æ–∂–µ–Ω–∏—è
  160 00000018 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 RAM_string1
                               SPACE            102         ; –î–ª—è —Ç–µ–∫—Å—Ç–∞ string1
  161 0000007E         ; –ö–æ–Ω–µ—Ü –∞—Å—Å–µ–º–±–ª–µ—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  162 0000007E                 END
Command Line: --debug --xref --width=132 --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --depend=.\objects\6copyrom-ramwithloop.d -o.\ob
jects\6copyrom-ramwithloop.o -IC:\Users\user1\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include --predefine="__UVISI
ON_VERSION SETA 537" --predefine="ARMCM4_FP SETA 1" --list=.\listings\6copyrom-ramwithloop.lst src\AssemblerPractice\6CopyRom-RamWit
hLoop.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

A_ROM 00000084

Symbol: A_ROM
   Definitions
      At line 145 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 13 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: A_ROM used once
Back 00000010

Symbol: Back
   Definitions
      At line 56 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 81 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 91 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 100 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 109 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 123 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 138 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s

Condt_3 00000090

Symbol: Condt_3
   Definitions
      At line 149 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: Condt_3 unused
Const_0 00000084

Symbol: Const_0
   Definitions
      At line 146 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: Const_0 unused
Const_1 00000088

Symbol: Const_1
   Definitions
      At line 147 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: Const_1 unused
Const_2 0000008C

Symbol: Const_2
   Definitions
      At line 148 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: Const_2 unused
CopyRomRamWithLoop 00000000

Symbol: CopyRomRamWithLoop
   Definitions
      At line 7 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 6 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: CopyRomRamWithLoop used once
Copy_Rom_Ram1 00000012

Symbol: Copy_Rom_Ram1
   Definitions
      At line 69 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 79 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Copy_Rom_Ram1 used once
Copy_Rom_Ram2 00000024

Symbol: Copy_Rom_Ram2
   Definitions
      At line 84 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 89 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Copy_Rom_Ram2 used once
Copy_Rom_Ram3 00000036

Symbol: Copy_Rom_Ram3
   Definitions
      At line 94 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 99 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Copy_Rom_Ram3 used once
Copy_Rom_Ram4 00000048

Symbol: Copy_Rom_Ram4
   Definitions
      At line 103 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 117 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Copy_Rom_Ram4 used once
Copy_Rom_Ram5 0000005A

Symbol: Copy_Rom_Ram5
   Definitions
      At line 120 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 45 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 131 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s

Copy_Rom_Ram6 00000074

Symbol: Copy_Rom_Ram6
   Definitions
      At line 134 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 139 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Copy_Rom_Ram6 used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 2 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: MyCode unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

ROM_string1 00000094

Symbol: ROM_string1
   Definitions
      At line 151 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: ROM_string1 unused
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

A_RAM 00000000

Symbol: A_RAM
   Definitions
      At line 157 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 14 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: A_RAM used once
MyData 00000000

Symbol: MyData
   Definitions
      At line 155 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: MyData unused
RAM_string1 00000018

Symbol: RAM_string1
   Definitions
      At line 160 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      None
Comment: RAM_string1 unused
Result_of_addition 00000010

Symbol: Result_of_addition
   Definitions
      At line 158 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 43 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
Comment: Result_of_addition used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N_32 00000004

Symbol: N_32
   Definitions
      At line 10 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
   Uses
      At line 15 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 157 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s
      At line 159 in file src\AssemblerPractice\6CopyRom-RamWithLoop.s

1 symbol
355 symbols in table
