


ARM Macro Assembler    Page 1 


    1 00000000         ; Объявить кодовую секцию MyCode
    2 00000000                 AREA             MyCode13_2, CODE, ReadOnly
    3 00000000         ; Объявить точку входа в программу приложения 
    4 00000000                 ENTRY
    5 00000000         ; Объвить точку входа глобальной переменной
    6 00000000                 EXPORT           DiscreteContrMachine_V2
    7 00000000         DiscreteContrMachine_V2
    8 00000000         ; Дискретный автомат управления продольно-строгальным 
    9 00000000         ; станком (второй вариант решения 
   10 00000000         ; с использованием "семафорной памяти")
   11 00000000         ; Зарезервируем под порты ввода X, вывода Y и состояние 
   12 00000000         ; автомата N три слова в "семафорной памяти" 
   13 00000000         ; с адреса 0x20000000
   14 00000000 20000000 
                       Port_X  EQU              0x20000000
   15 00000000 20000004 
                       Var_N   EQU              0x20000004
   16 00000000 20000008 
                       Port_Y  EQU              0x20000008
   17 00000000         
   18 00000000         ; Определение псевдо-адресов доступа к 
   19 00000000         ; битовым компонентам вектора X в "битовой ленте"
   20 00000000         ; (в текущей задаче используются только x0-x5)
   21 00000000 22000000 
                       x0      EQU              0x22000000
   22 00000000 22000004 
                       x1      EQU              0x22000004
   23 00000000 22000008 
                       x2      EQU              0x22000008
   24 00000000 2200000C 
                       x3      EQU              0x2200000c
   25 00000000 22000010 
                       x4      EQU              0x22000010
   26 00000000 22000014 
                       x5      EQU              0x22000014
   27 00000000         
   28 00000000         ; Объявление псевдо-адресов доступа к битам вектора Y
   29 00000000         ; (в текущей задаче не используются, так как вектор
   30 00000000         ; управляющих воздействий выводится целиком Y)
   31 00000000         ; y0   EQU 0x22000100
   32 00000000         ; y1   EQU 0x22000104
   33 00000000         ; y2   EQU 0x22000108
   34 00000000         
   35 00000000         
   36 00000000         ; Инициализация автомата
   37 00000000         ; Установить начальное состояние автомата N=0 
   38 00000000         ; Вывести управляющее воздействие Y = 0
   39 00000000 4839            LDR              r0,=N
   40 00000002 F04F 0100       MOV              r1,#0
   41 00000006 E9C0 1100       STRD             r1, r1,[r0] ; Сохранить сразу два слова N,Y
   42 0000000A         
   43 0000000A         ; Основная программа дискретного управляющего автомата 
   44 0000000A         ; Вызывается с частотой дискретизации системы управления
   45 0000000A         DISK_AVT
   46 0000000A         ; Получить текущий вектор входных битовых переменных X 
   47 0000000A         ; из "семафорной памяти" и сохранить
   48 0000000A         ; каждый бит в отдельном регистре ЦПУ r0,r1,r2,r3,r4,r5
   49 0000000A F04F 5608       LDR              r6,=x0      ; Загрузить псевдо-адрес бита x0
   50 0000000E E896 003F       LDM              r6,{r0-r5}  ; Считать биты в регистры r0-r5



ARM Macro Assembler    Page 2 


   51 00000012         ; Получить текущий номер состояния автомата N
   52 00000012         ; и сохранить в регистре r7
   53 00000012 4E35            LDR              r6,=N
   54 00000014 6837            LDR              r7,[r6]
   55 00000016         
   56 00000016         ; Загрузить в регистр r6 адрес таблицы точек входа
   57 00000016         ; в подпрограммы - интерпретаторы вершин графа
   58 00000016 A630            ADR              r6, TAB_ADDR
   59 00000018         ; Считать из таблицы адрес интерпретатора, номер которого
   60 00000018         ; уже загружен в регистр r7 (номер вершины графа)
   61 00000018         ; Попутный авто-расчет смещения по таблице offset=(r7)*4
   62 00000018 F856 8027       LDR              r8,[r6, r7, LSL #2]
   63 0000001C         ; Косвенный вызов подпрограммы по ее начальному адресу
   64 0000001C 47C0            BLX              r8
   65 0000001E         ;    ...
   66 0000001E         ; Повторить цикл дискретного управляющего автомата
   67 0000001E E7F4            B                DISK_AVT
   68 00000020         
   69 00000020         ; Подпрограмма интерпретатора вершины 0 графа
   70 00000020         INT_0
   71 00000020         
   72 00000020         ; Проверить все условия перехода в порядке приоритета
   73 00000020         ; Компоненты вектора X сохранены в регистрах r0-r5
   74 00000020         ; Использовать в качестве аккумулятора регистр r10
   75 00000020         ; Условие 1: (x0+x2)∙(/x5) ∙(/x1) ∙(/x3)
   76 00000020 EA40 0A02       ORR              r10,r0,r2   ;(x0+x2
   77 00000024 EA2A 0A05       BIC              r10,r5      ; ∙(/x5
   78 00000028 EA2A 0A01       BIC              r10,r1      ; ∙(/x1)
   79 0000002C EA2A 0A03       BIC              r10,r3      ; ∙(/x3)
   80 00000030 F01A 0F01       TST              r10,#1      ; Протестировать Bit[0]
   81 00000034         
   82 00000034         ; Если условие истинно, сменить номер состояния N=1
   83 00000034         ; и выдать управляющее воздействие Y=4
   84 00000034 BF1F 4E2C       LDRNE            r6,=N
   85 00000038 2701            MOVNE            r7,#1
   86 0000003A F04F 0804       MOVNE            r8,#4
   87 0000003E E9C6 7800       STRDNE           r7,r8,[r6]  ; Сохранить сразу два слова N,Y
   88 00000042         ; Досрочный выход из подпрограммы INT_0    
   89 00000042 BF18 4770       BXNE             lr          ; Остальные условия не проверять!
   90 00000046         
   91 00000046         ; Условие 2: x1∙(/x5) ∙(/x2) ∙(/x4)
   92 00000046 EA21 0A05       BIC              r10,r1,r5
   93 0000004A EA2A 0A02       BIC              r10,r2
   94 0000004E EA2A 0A04       BIC              r10,r4
   95 00000052 F01A 0F01       TST              r10,#1      ; Протестировать Bit[0]
   96 00000056         
   97 00000056         ; Если условие истинно, сменить номер состояния N=2
   98 00000056         ; и выдать управляющее воздействие Y=2
   99 00000056 BF1E 4E23       LDRNE            r6,=N
  100 0000005A 2702            MOVNE            r7,#2
  101 0000005C E9C6 7700       STRDNE           r7,r7,[r6]  ; Сохранить сразу два слова N,Y
  102 00000060         
  103 00000060         ; Больше условий перехода нет, завершить подпрограмму
  104 00000060 4770            BX               lr
  105 00000062         
  106 00000062         ; Подпрограмма интерпретатора вершины 1 графа
  107 00000062         INT_1
  108 00000062         
  109 00000062         ; Проверить все условия перехода в порядке приоритета



ARM Macro Assembler    Page 3 


  110 00000062         ; Все компоненты вектора входа сохранены в регистрах r0-r5
  111 00000062         ; Условие перехода 1: x3+x1∙x2
  112 00000062 EA01 0A02       AND              r10,r1,r2
  113 00000066 EA4A 0A03       ORR              r10,r3
  114 0000006A F01A 0F01       TST              r10,#1      ; Протестировать Bit[0]
  115 0000006E         
  116 0000006E         ; Если условие истинно, сменить номер состояния N=3
  117 0000006E         ; и выдать управляющее воздействие Y=1
  118 0000006E BF1F 4E1D       LDRNE            r6,=N
  119 00000072 2703            MOVNE            r7,#3
  120 00000074 F04F 0801       MOVNE            r8,#1
  121 00000078 E9C6 7800       STRDNE           r7,r8,[r6]  ; Сохранить сразу два слова N,Y
  122 0000007C         ; Досрочный выход из подпрограммы INT_1    
  123 0000007C BF18 4770       BXNE             lr          ; Остальные условия не проверять!
  124 00000080         
  125 00000080         ; Условие перехода 2: x1+x5   
  126 00000080 EA41 0A05       ORR              r10,r1,r5
  127 00000084 F01A 0F01       TST              r10,#1      ; Протестировать Bit[0]
  128 00000088         
  129 00000088         ; Если условие истинно, сменить номер состояния N=0
  130 00000088         ; и выдать управляющее воздействие Y=0
  131 00000088 BF1E 4E17       LDRNE            r6,=N
  132 0000008C 2700            MOVNE            r7,#0
  133 0000008E E9C6 7700       STRDNE           r7,r7,[r6]  ; Сохранить два слова N,Y
  134 00000092         
  135 00000092         ; Больше условий перехода нет, завершить подпрограмму
  136 00000092 4770            BX               lr
  137 00000094         
  138 00000094         ; Подпрограмма интерпретатора вершины 2 графа
  139 00000094         INT_2
  140 00000094         
  141 00000094         ; Проверить все условия перехода в порядке приоритета
  142 00000094         ; Условие перехода 1: x4+x1∙x2
  143 00000094 EA01 0A02       AND              r10,r1,r2
  144 00000098 EA4A 0A04       ORR              r10,r4
  145 0000009C F01A 0F01       TST              r10,#1      ; Протестировать Bit[0
  146 000000A0         
  147 000000A0         ; Если условие истинно, сменить номер состояния N=3
  148 000000A0         ; и выдать управляющее воздействие Y=1
  149 000000A0 BF1F 4E11       LDRNE            r6,=N
  150 000000A4 2703            MOVNE            r7,#3
  151 000000A6 F04F 0801       MOVNE            r8,#1
  152 000000AA E9C6 7800       STRDNE           r7,r8,[r6]  ; Сохранить сразу два слова N,Y
  153 000000AE         ; Досрочный выход из подпрограммы INT_2    
  154 000000AE BF18 4770       BXNE             lr          ; Остальные условия не проверять!
  155 000000B2         
  156 000000B2         ; Условие перехода 2: x2+x5
  157 000000B2 EA42 0A05       ORR              r10,r2,r5
  158 000000B6 F01A 0F01       TST              r10,#1      ; Протестировать Bit[0]
  159 000000BA         
  160 000000BA         ; Если условие истинно, сменить номер состояния N=0
  161 000000BA         ; и выдать управляющее воздействие Y=0
  162 000000BA BF1E 4E0A       LDRNE            r6,=N
  163 000000BE 2700            MOVNE            r7,#0
  164 000000C0 E9C6 7700       STRDNE           r7,r7,[r6]  ; Сохранить сразу два слова N,Y
  165 000000C4         
  166 000000C4         ; Больше условий перехода нет, завершить подпрограмму
  167 000000C4 4770            BX               lr
  168 000000C6         



ARM Macro Assembler    Page 4 


  169 000000C6         ; Подпрограмма интерпретатора веришны 3 графа
  170 000000C6         INT_3
  171 000000C6         
  172 000000C6         ; Проверить единственное условие перехода x5
  173 000000C6 F015 0F01       TST              r5,#1
  174 000000CA         
  175 000000CA         ; Если условие истинно, сменить номер состояния N=0
  176 000000CA         ; и выдать управляющее воздействие Y=0
  177 000000CA BF1E 4E06       LDRNE            r6,=N
  178 000000CE 2700            MOVNE            r7,#0
  179 000000D0 E9C6 7700       STRDNE           r7,r7,[r6]  ; Сохранить сразу два слова N,Y
  180 000000D4         
  181 000000D4         ; Больше условий перехода нет, завершить подпрограмму
  182 000000D4 4770            BX               lr
  183 000000D6         
  184 000000D6         ; Выравнивание кодовой памяти по границе полного слова
  185 000000D6         ; для размещения начальных адресов подпрограмм
  186 000000D6 00 00           ALIGN
  187 000000D8         ; Таблица начальных адресов интерпретаторов вершин графа
  188 000000D8         TAB_ADDR
  189 000000D8 00000000        DCD              INT_0
  190 000000DC 00000000        DCD              INT_1
  191 000000E0 00000000        DCD              INT_2
  192 000000E4 00000000        DCD              INT_3
  193 000000E8         
  194 000000E8                 ALIGN
  195 000000E8         ; Секция данных 
  196 000000E8 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             MyData13_2, DATA, ReadWrite
  197 00000000         ; Резервирование основных переменных автомата
  198 00000000         ; в области "семафорной памяти", начиная с адреса 0x20000000
  199 00000000 00 00 00 
              00       X       SPACE            4
  200 00000004 00 00 00 
              00       N       SPACE            4
  201 00000008 00 00 00 
              00       Y       SPACE            4
  202 0000000C         ; Объявление этих переменных "глобальными" для возможности
  203 0000000C         ; включения в окно наблюдаемых переменных Watch при отладке
  204 0000000C                 EXPORT           X
  205 0000000C                 EXPORT           Y
  206 0000000C                 EXPORT           N
  207 0000000C         
  208 0000000C         ; Конец ассемблерного текста
  209 0000000C                 END
Command Line: --debug --xref --width=132 --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --depend=.\objects\13discretecontrmachinev2.d -o
.\objects\13discretecontrmachinev2.o -IC:\Users\user1\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include --predefine=
"__UVISION_VERSION SETA 537" --predefine="ARMCM4_FP SETA 1" --list=.\listings\13discretecontrmachinev2.lst src\AssemblerPractice\13D
iscreteContrMachineV2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DISK_AVT 0000000A

Symbol: DISK_AVT
   Definitions
      At line 45 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 67 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: DISK_AVT used once
DiscreteContrMachine_V2 00000000

Symbol: DiscreteContrMachine_V2
   Definitions
      At line 7 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 6 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: DiscreteContrMachine_V2 used once
INT_0 00000020

Symbol: INT_0
   Definitions
      At line 70 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 189 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: INT_0 used once
INT_1 00000062

Symbol: INT_1
   Definitions
      At line 107 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 190 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: INT_1 used once
INT_2 00000094

Symbol: INT_2
   Definitions
      At line 139 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 191 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: INT_2 used once
INT_3 000000C6

Symbol: INT_3
   Definitions
      At line 170 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 192 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: INT_3 used once
MyCode13_2 00000000

Symbol: MyCode13_2
   Definitions
      At line 2 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: MyCode13_2 unused
TAB_ADDR 000000D8

Symbol: TAB_ADDR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 188 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 58 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: TAB_ADDR used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData13_2 00000000

Symbol: MyData13_2
   Definitions
      At line 196 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: MyData13_2 unused
N 00000004

Symbol: N
   Definitions
      At line 200 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 39 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 53 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 84 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 99 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 118 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 131 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 149 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 162 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 177 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
      At line 206 in file src\AssemblerPractice\13DiscreteContrMachineV2.s

X 00000000

Symbol: X
   Definitions
      At line 199 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 204 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: X used once
Y 00000008

Symbol: Y
   Definitions
      At line 201 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 205 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: Y used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Port_X 20000000

Symbol: Port_X
   Definitions
      At line 14 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: Port_X unused
Port_Y 20000008

Symbol: Port_Y
   Definitions
      At line 16 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: Port_Y unused
Var_N 20000004

Symbol: Var_N
   Definitions
      At line 15 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: Var_N unused
x0 22000000

Symbol: x0
   Definitions
      At line 21 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      At line 49 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
Comment: x0 used once
x1 22000004

Symbol: x1
   Definitions
      At line 22 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: x1 unused
x2 22000008

Symbol: x2
   Definitions
      At line 23 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: x2 unused
x3 2200000C

Symbol: x3
   Definitions
      At line 24 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: x3 unused
x4 22000010

Symbol: x4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: x4 unused
x5 22000014

Symbol: x5
   Definitions
      At line 26 in file src\AssemblerPractice\13DiscreteContrMachineV2.s
   Uses
      None
Comment: x5 unused
9 symbols
356 symbols in table
