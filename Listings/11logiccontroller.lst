


ARM Macro Assembler    Page 1 


    1 00000000         ; Подключить файл с макробиблитекой функций
    2 00000000         ; битового сопроцессора
    3 00000000                 INCLUDE          MacroBit.s
    1 00000000         ; Макробиблиотека команд битового сопроцессора
    2 00000000         ;*********************************************************
    3 00000000         ; Загрузка бита с заданным номером в битовый аккумулятор
    4 00000000                 MACRO
    5 00000000                 L_Bit            $A,$R,$N
    6 00000000                 LSL              $A,$R,#(31-$N)
    7 00000000                 MEND
    8 00000000         ;********************************************************* 
    9 00000000         
   10 00000000         ;*********************************************************
   11 00000000         ; "Логическое И" бита с битовым аккумулятором
   12 00000000                 MACRO
   13 00000000                 AND_Bit          $A,$R,$N
   14 00000000                 ANDS             $A,$R,LSL #(31-$N)
   15 00000000                 MEND
   16 00000000         ;********************************************************* 
   17 00000000         ;*********************************************************
   18 00000000         ; "Логическое И НЕ" бита с битовым аккумулятором
   19 00000000                 MACRO
   20 00000000                 ANDN_Bit         $A,$R,$N
   21 00000000                 BICS             $A,$R,LSL #(31-$N)
   22 00000000                 MEND
   23 00000000         ;********************************************************* 
   24 00000000         ;*********************************************************
   25 00000000         ; "Логическое ИЛИ" бита с битовым аккумулятором
   26 00000000                 MACRO
   27 00000000                 ORR_Bit          $A,$R,$N
   28 00000000                 ORRS             $A,$R,LSL #(31-$N)
   29 00000000                 MEND
   30 00000000         ;********************************************************* 
   31 00000000         ;*********************************************************
   32 00000000         ; "Логическое ИЛИ НЕ" бита с битовым аккумулятором
   33 00000000                 MACRO
   34 00000000                 ORN_Bit          $A,$R,$N
   35 00000000                 ORNS             $A,$R,LSL #(31-$N)
   36 00000000                 MEND
   37 00000000         ;*********************************************************
   38 00000000         ;*********************************************************
   39 00000000         ; "Логическое Исключающее ИЛИ" бита с битовым аккумулятором
   40 00000000                 MACRO
   41 00000000                 EOR_Bit          $A,$R,$N
   42 00000000                 EORS             $A,$R,LSL #(31-$N)
   43 00000000                 MEND
   44 00000000         ;*********************************************************
   45 00000000         
   46 00000000         ;*********************************************************
   47 00000000         ; "Логическое НЕ" битового аккумулятора
   48 00000000                 MACRO
   49 00000000                 NOT_A            $A
   50 00000000                 MVNS             $A,$A
   51 00000000                 MEND
   52 00000000         ;*********************************************************
   53 00000000         
   54 00000000         ;*********************************************************
   55 00000000         ; Сохранить содержимое битового аккумулятора 
   56 00000000         ; в заданном бите регистра 



ARM Macro Assembler    Page 2 


   57 00000000                 MACRO
   58 00000000                 S_Bit            $A, $R, $N
   59 00000000                 ORRMI            $R,#(1<<$N)
   60 00000000                 BICPL            $R,#(1<<$N)
   61 00000000                 MEND
   62 00000000         ;*********************************************************
   63 00000000         
   64 00000000         ; Конец ассемблерного текста
   65 00000000                 END
    4 00000000         ; Объявить кодовую секцию MyCode
    5 00000000                 AREA             MyCode11, CODE, ReadOnly
    6 00000000         ; Объявить точку входа в программу приложения 
    7 00000000                 ENTRY
    8 00000000         ; Объвить точку входа глобальной переменной
    9 00000000                 EXPORT           LogicController
   10 00000000         LogicController
   11 00000000         LOG_CONTR
   12 00000000         ; Реализация логического контроллера с использованием
   13 00000000         ; макробиблиотеки функций битового сопроцессора
   14 00000000         ; Загрузить вектор входа X из памяти
   15 00000000 4D19            LDR              r5, =X
   16 00000002 6829            LDR              r1, [r5]
   17 00000004         
   18 00000004         ; Расчет Функции y0
   19 00000004                 L_Bit            r0, r1, 6
    6 00000004 EA4F 6041       LSL              r0,r1,#(31-6)
   20 00000008                 EOR_Bit          r0, r1, 9
   42 00000008 EA90 5081       EORS             r0,r1,LSL #(31-9)
   21 0000000C                 NOT_A            r0
   50 0000000C 43C0            MVNS             r0,r0
   22 0000000E 4682            MOV              r10, r0
   23 00000010         
   24 00000010                 L_Bit            r0, r1, 31
    6 00000010 EA4F 0001       LSL              r0,r1,#(31-31)
   25 00000014                 ORN_Bit          r0, r1, 2
   35 00000014 EA70 7041       ORNS             r0,r1,LSL #(31-2)
   26 00000018 EA00 0A0A       AND              r10, r0, r10
   27 0000001C         
   28 0000001C                 L_Bit            r0, r1, 0
    6 0000001C EA4F 70C1       LSL              r0,r1,#(31-0)
   29 00000020                 AND_Bit          r0, r1, 5
   14 00000020 EA10 6081       ANDS             r0,r1,LSL #(31-5)
   30 00000024                 ANDN_Bit         r0, r1, 7
   21 00000024 EA30 6001       BICS             r0,r1,LSL #(31-7)
   31 00000028         
   32 00000028         ; Не забываем установить флаги
   33 00000028 EA50 000A       ORRS             r0, r10
   34 0000002C                 S_Bit            r0, r2, 0
   59 0000002C BF4C F042 
              0201             ORRMI            r2,#(1<<0)
   60 00000032 F022 0201       BICPL            r2,#(1<<0)
   35 00000036         
   36 00000036         ; Расчет функции y23
   37 00000036                 L_Bit            r0,r1,0
    6 00000036 EA4F 70C1       LSL              r0,r1,#(31-0)
   38 0000003A                 NOT_A            r0
   50 0000003A 43C0            MVNS             r0,r0
   39 0000003C                 ORN_Bit          r0,r1,3
   35 0000003C EA70 7001       ORNS             r0,r1,LSL #(31-3)



ARM Macro Assembler    Page 3 


   40 00000040                 S_Bit            r0,r2,23
   59 00000040 BF4C F442 
              0200             ORRMI            r2,#(1<<23)
   60 00000046 F422 0200       BICPL            r2,#(1<<23)
   41 0000004A         
   42 0000004A         ; Расчет функция y24
   43 0000004A                 L_Bit            r0,r1,0
    6 0000004A EA4F 70C1       LSL              r0,r1,#(31-0)
   44 0000004E                 AND_Bit          r0,r1,3
   14 0000004E EA10 7001       ANDS             r0,r1,LSL #(31-3)
   45 00000052                 NOT_A            r0
   50 00000052 43C0            MVNS             r0,r0
   46 00000054                 S_Bit            r0,r2,24
   59 00000054 BF4C F042 
              7280             ORRMI            r2,#(1<<24)
   60 0000005A F022 7280       BICPL            r2,#(1<<24)
   47 0000005E         
   48 0000005E         ; Вывести управляющие воздействия в порт вывода
   49 0000005E 4D03            LDR              r5,=Y
   50 00000060 602A            STR              r2,[r5]
   51 00000062         ; Повторить цикл логического контроллера
   52 00000062 E7CD            B                LOG_CONTR
   53 00000064         
   54 00000064         ; Останов
   55 00000064 4770            BX               lr
   56 00000066 00 00           ALIGN
   57 00000068         ; Объявление секции данных в памят данных
   58 00000068 00000000 
              00000000         AREA             MyData11, DATA, ReadWrite
   59 00000000         ; Резервирование 2-х слов под 
   60 00000000         ; вектор входа X и вектор выхода Y
   61 00000000 00 00 00 
              00       X       SPACE            4
   62 00000004 00 00 00 
              00       Y       SPACE            4
   63 00000008         
   64 00000008         ; Конец ассемблерного текста
   65 00000008                 END
Command Line: --debug --xref --width=132 --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --depend=.\objects\11logiccontroller.d -o.\objec
ts\11logiccontroller.o -IC:\Users\user1\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM4\Include --predefine="__UVISION_VER
SION SETA 537" --predefine="ARMCM4_FP SETA 1" --list=.\listings\11logiccontroller.lst src\AssemblerPractice\11LogicController.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LOG_CONTR 00000000

Symbol: LOG_CONTR
   Definitions
      At line 11 in file src\AssemblerPractice\11LogicController.s
   Uses
      At line 52 in file src\AssemblerPractice\11LogicController.s
Comment: LOG_CONTR used once
LogicController 00000000

Symbol: LogicController
   Definitions
      At line 10 in file src\AssemblerPractice\11LogicController.s
   Uses
      At line 9 in file src\AssemblerPractice\11LogicController.s
Comment: LogicController used once
MyCode11 00000000

Symbol: MyCode11
   Definitions
      At line 5 in file src\AssemblerPractice\11LogicController.s
   Uses
      None
Comment: MyCode11 unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData11 00000000

Symbol: MyData11
   Definitions
      At line 58 in file src\AssemblerPractice\11LogicController.s
   Uses
      None
Comment: MyData11 unused
X 00000000

Symbol: X
   Definitions
      At line 61 in file src\AssemblerPractice\11LogicController.s
   Uses
      At line 15 in file src\AssemblerPractice\11LogicController.s
Comment: X used once
Y 00000004

Symbol: Y
   Definitions
      At line 62 in file src\AssemblerPractice\11LogicController.s
   Uses
      At line 49 in file src\AssemblerPractice\11LogicController.s
Comment: Y used once
3 symbols
341 symbols in table
