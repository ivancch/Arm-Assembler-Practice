Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup1.o(RESET) refers to startup1.o(STACK) for __initial_sp
    startup1.o(RESET) refers to startup1.o(.text) for Reset_Handler
    startup1.o(RESET) refers to nmi.o(.text) for NMI_Handler
    startup1.o(.text) refers to main.o(MyCode) for Main
    main.o(MyCode) refers (Special) to 8addandsubdwordmacro.o(MyCode8) for AddAndSubDWord
    main.o(MyCode) refers (Special) to 9arithmeticopwithldm-stm.o(MyCode9) for ArithmeticOpWithLDM_STM
    main.o(MyCode) refers (Special) to 10bitwiseopandshifts.o(MyCode10) for BitwiseOpAndShifts
    main.o(MyCode) refers (Special) to 6copyrom-ramwithloop.o(MyCode) for CopyRomRamWithLoop
    main.o(MyCode) refers (Special) to 3forcedreservationltorg.o(MyCode) for ForcedReservationLTORG
    main.o(MyCode) refers (Special) to 5indirectaddressing.o(MyCode) for IndirectAddressing
    main.o(MyCode) refers (Special) to 7operationsaddandsub.o(MyCode7) for OperationsAddAndSub
    main.o(MyCode) refers (Special) to 4reservationdirective.o(MyCode) for ReservationDirective
    main.o(MyCode) refers (Special) to 1simpleoperations.o(MyCode) for SimpleOperations
    main.o(MyCode) refers (Special) to 2_32bitconst.o(MyCode) for _32bitConst
    main.o(MyCode) refers to 11logiccontroller.o(MyCode11) for LogicController
    6copyrom-ramwithloop.o(MyCode) refers to 6copyrom-ramwithloop.o(MyData) for A_RAM
    7operationsaddandsub.o(MyCode7) refers to 7operationsaddandsub.o(MyData7) for Array_W
    8addandsubdwordmacro.o(MyCode8) refers to 8addandsubdwordmacro.o(MyData8) for RAM_0
    9arithmeticopwithldm-stm.o(MyCode9) refers to mult32us.o(MyCodeMULT) for MUL_U32_U32
    9arithmeticopwithldm-stm.o(MyCode9) refers to 9arithmeticopwithldm-stm.o(MyData) for A_RAM9
    10bitwiseopandshifts.o(MyCode10) refers to 10bitwiseopandshifts.o(MyData) for X
    11logiccontroller.o(MyCode11) refers to 11logiccontroller.o(MyData11) for X


==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    src\AssemblerPractice\10BitwiseOpAndShifts.s 0x00000000   Number         0  10bitwiseopandshifts.o ABSOLUTE
    src\AssemblerPractice\11LogicController.s 0x00000000   Number         0  11logiccontroller.o ABSOLUTE
    src\AssemblerPractice\1SimpleOperations.s 0x00000000   Number         0  1simpleoperations.o ABSOLUTE
    src\AssemblerPractice\2_32bitConst.s     0x00000000   Number         0  2_32bitconst.o ABSOLUTE
    src\AssemblerPractice\3ForcedReservationLTORG.s 0x00000000   Number         0  3forcedreservationltorg.o ABSOLUTE
    src\AssemblerPractice\4ReservationDirective.s 0x00000000   Number         0  4reservationdirective.o ABSOLUTE
    src\AssemblerPractice\5IndirectAddressing.s 0x00000000   Number         0  5indirectaddressing.o ABSOLUTE
    src\AssemblerPractice\6CopyRom-RamWithLoop.s 0x00000000   Number         0  6copyrom-ramwithloop.o ABSOLUTE
    src\AssemblerPractice\7OperationsAddAndSub.s 0x00000000   Number         0  7operationsaddandsub.o ABSOLUTE
    src\AssemblerPractice\8AddAndSubDWordMACRO.s 0x00000000   Number         0  8addandsubdwordmacro.o ABSOLUTE
    src\AssemblerPractice\9ArithmeticOpWithLDM-STM.s 0x00000000   Number         0  9arithmeticopwithldm-stm.o ABSOLUTE
    src\AssemblerPractice\MULT32US.s         0x00000000   Number         0  mult32us.o ABSOLUTE
    src\AssemblerPractice\MacroBit.s         0x00000000   Number         0  macrobit.o ABSOLUTE
    src\AssemblerPractice\Main.s             0x00000000   Number         0  main.o ABSOLUTE
    src\AssemblerPractice\MyMacro1.s         0x00000000   Number         0  mymacro1.o ABSOLUTE
    src\StartUpAndInterrupts\NMI.s           0x00000000   Number         0  nmi.o ABSOLUTE
    src\StartUpAndInterrupts\StartUp1.s      0x00000000   Number         0  startup1.o ABSOLUTE
    RESET                                    0x00000000   Section       12  startup1.o(RESET)
    $v0                                      0x0000000c   Number         0  startup1.o(.text)
    .text                                    0x0000000c   Section       12  startup1.o(.text)
    $v0                                      0x00000018   Number         0  nmi.o(.text)
    .text                                    0x00000018   Section        6  nmi.o(.text)
    $v0                                      0x00000020   Number         0  main.o(MyCode)
    MyCode                                   0x00000020   Section       12  main.o(MyCode)
    $v0                                      0x0000002c   Number         0  1simpleoperations.o(MyCode)
    MyCode                                   0x0000002c   Section       94  1simpleoperations.o(MyCode)
    $v0                                      0x0000008c   Number         0  2_32bitconst.o(MyCode)
    MyCode                                   0x0000008c   Section       36  2_32bitconst.o(MyCode)
    $v0                                      0x000000b0   Number         0  3forcedreservationltorg.o(MyCode)
    MyCode                                   0x000000b0   Section     5034  3forcedreservationltorg.o(MyCode)
    Next                                     0x00001459   Thumb Code     0  3forcedreservationltorg.o(MyCode)
    $v0                                      0x0000145c   Number         0  4reservationdirective.o(MyCode)
    MyCode                                   0x0000145c   Section       30  4reservationdirective.o(MyCode)
    $v0                                      0x0000147c   Number         0  5indirectaddressing.o(MyCode)
    MyCode                                   0x0000147c   Section       88  5indirectaddressing.o(MyCode)
    $v0                                      0x000014d4   Number         0  6copyrom-ramwithloop.o(MyCode)
    MyCode                                   0x000014d4   Section      184  6copyrom-ramwithloop.o(MyCode)
    $v0                                      0x0000158c   Number         0  10bitwiseopandshifts.o(MyCode10)
    MyCode10                                 0x0000158c   Section      120  10bitwiseopandshifts.o(MyCode10)
    $v0                                      0x00001604   Number         0  11logiccontroller.o(MyCode11)
    MyCode11                                 0x00001604   Section      112  11logiccontroller.o(MyCode11)
    $v0                                      0x00001674   Number         0  7operationsaddandsub.o(MyCode7)
    MyCode7                                  0x00001674   Section       60  7operationsaddandsub.o(MyCode7)
    $v0                                      0x000016b0   Number         0  8addandsubdwordmacro.o(MyCode8)
    MyCode8                                  0x000016b0   Section      180  8addandsubdwordmacro.o(MyCode8)
    $v0                                      0x00001764   Number         0  9arithmeticopwithldm-stm.o(MyCode9)
    MyCode9                                  0x00001764   Section      168  9arithmeticopwithldm-stm.o(MyCode9)
    BackLinkV1                               0x00001793   Thumb Code     0  9arithmeticopwithldm-stm.o(MyCode9)
    BackLinkV2                               0x000017a5   Thumb Code     0  9arithmeticopwithldm-stm.o(MyCode9)
    A_ROM9                                   0x000017a8   Data           0  9arithmeticopwithldm-stm.o(MyCode9)
    A_ROM9_2                                 0x000017bc   Data           0  9arithmeticopwithldm-stm.o(MyCode9)
    A_ROM9_3                                 0x000017d4   Data           0  9arithmeticopwithldm-stm.o(MyCode9)
    $v0                                      0x0000180c   Number         0  mult32us.o(MyCodeMULT)
    MyCodeMULT                               0x0000180c   Section       28  mult32us.o(MyCodeMULT)
    A_RAM                                    0x20000000   Data          16  6copyrom-ramwithloop.o(MyData)
    MyData                                   0x20000000   Section      126  6copyrom-ramwithloop.o(MyData)
    Result_of_addition                       0x20000010   Data           0  6copyrom-ramwithloop.o(MyData)
    A_RAM9                                   0x20000080   Data           0  9arithmeticopwithldm-stm.o(MyData)
    MyData                                   0x20000080   Section      400  9arithmeticopwithldm-stm.o(MyData)
    X                                        0x20000210   Data           1  10bitwiseopandshifts.o(MyData)
    MyData                                   0x20000210   Section        2  10bitwiseopandshifts.o(MyData)
    Y                                        0x20000211   Data           1  10bitwiseopandshifts.o(MyData)
    X                                        0x20000214   Data           4  11logiccontroller.o(MyData11)
    MyData11                                 0x20000214   Section        8  11logiccontroller.o(MyData11)
    Y                                        0x20000218   Data           4  11logiccontroller.o(MyData11)
    Array_W                                  0x2000021c   Data          16  7operationsaddandsub.o(MyData7)
    MyData7                                  0x2000021c   Section       32  7operationsaddandsub.o(MyData7)
    Sum_W                                    0x2000022c   Data           8  7operationsaddandsub.o(MyData7)
    Sub_W                                    0x20000234   Data           8  7operationsaddandsub.o(MyData7)
    RAM_0                                    0x2000023c   Data          16  8addandsubdwordmacro.o(MyData8)
    MyData8                                  0x2000023c   Section       28  8addandsubdwordmacro.o(MyData8)
    Result                                   0x2000024c   Data          12  8addandsubdwordmacro.o(MyData8)
    STACK                                    0x20000258   Section     1024  startup1.o(STACK)
    __initial_sp                             0x20000658   Data           0  startup1.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$STANDARDLIB$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup1.o(RESET)
    Reset_Handler                            0x0000000d   Thumb Code     4  startup1.o(.text)
    __Vectors_End                            0x0000000c   Data           0  startup1.o(RESET)
    __Vectors_Size                           0x0000000c   Number         0  startup1.o ABSOLUTE
    NMI_Handler                              0x00000019   Thumb Code     6  nmi.o(.text)
    Main                                     0x00000021   Thumb Code     0  main.o(MyCode)
    SimpleOperations                         0x0000002d   Thumb Code     0  1simpleoperations.o(MyCode)
    _32bitConst                              0x0000008d   Thumb Code     0  2_32bitconst.o(MyCode)
    ForcedReservationLTORG                   0x000000b1   Thumb Code     0  3forcedreservationltorg.o(MyCode)
    ReservationDirective                     0x0000145d   Thumb Code     0  4reservationdirective.o(MyCode)
    IndirectAddressing                       0x0000147d   Thumb Code     0  5indirectaddressing.o(MyCode)
    CopyRomRamWithLoop                       0x000014d5   Thumb Code     0  6copyrom-ramwithloop.o(MyCode)
    BitwiseOpAndShifts                       0x0000158d   Thumb Code     0  10bitwiseopandshifts.o(MyCode10)
    LogicController                          0x00001605   Thumb Code     0  11logiccontroller.o(MyCode11)
    OperationsAddAndSub                      0x00001675   Thumb Code     0  7operationsaddandsub.o(MyCode7)
    AddAndSubDWord                           0x000016b1   Thumb Code     0  8addandsubdwordmacro.o(MyCode8)
    ArithmeticOpWithLDM_STM                  0x00001765   Thumb Code     0  9arithmeticopwithldm-stm.o(MyCode9)
    MUL_U32_U32                              0x0000180d   Thumb Code     0  mult32us.o(MyCodeMULT)
    MUL_S32_S32                              0x0000181b   Thumb Code     0  mult32us.o(MyCodeMULT)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000000d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00001a80, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001828, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000000c   Data   RO            2    RESET               startup1.o
    0x0000000c   0x0000000c   0x0000000c   Code   RO            3  * .text               startup1.o
    0x00000018   0x00000018   0x00000006   Code   RO            9    .text               nmi.o
    0x0000001e   0x0000001e   0x00000002   PAD
    0x00000020   0x00000020   0x0000000c   Code   RO           13    MyCode              main.o
    0x0000002c   0x0000002c   0x0000005e   Code   RO           16  * MyCode              1simpleoperations.o
    0x0000008a   0x0000008a   0x00000002   PAD
    0x0000008c   0x0000008c   0x00000024   Code   RO           19  * MyCode              2_32bitconst.o
    0x000000b0   0x000000b0   0x000013aa   Code   RO           22    MyCode              3forcedreservationltorg.o
    0x0000145a   0x0000145a   0x00000002   PAD
    0x0000145c   0x0000145c   0x0000001e   Code   RO           25  * MyCode              4reservationdirective.o
    0x0000147a   0x0000147a   0x00000002   PAD
    0x0000147c   0x0000147c   0x00000058   Code   RO           28  * MyCode              5indirectaddressing.o
    0x000014d4   0x000014d4   0x000000b8   Code   RO           31  * MyCode              6copyrom-ramwithloop.o
    0x0000158c   0x0000158c   0x00000078   Code   RO           50  * MyCode10            10bitwiseopandshifts.o
    0x00001604   0x00001604   0x00000070   Code   RO           54  * MyCode11            11logiccontroller.o
    0x00001674   0x00001674   0x0000003c   Code   RO           35  * MyCode7             7operationsaddandsub.o
    0x000016b0   0x000016b0   0x000000b4   Code   RO           39  * MyCode8             8addandsubdwordmacro.o
    0x00001764   0x00001764   0x000000a8   Code   RO           43  * MyCode9             9arithmeticopwithldm-stm.o
    0x0000180c   0x0000180c   0x0000001c   Code   RO           47    MyCodeMULT          mult32us.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001828, Size: 0x00000258, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001828   0x0000007e   Data   RW           32    MyData              6copyrom-ramwithloop.o
    0x2000007e   0x000018a6   0x00000002   PAD
    0x20000080   0x000018a8   0x00000190   Data   RW           44    MyData              9arithmeticopwithldm-stm.o
    0x20000210   0x00001a38   0x00000002   Data   RW           51    MyData              10bitwiseopandshifts.o
    0x20000212   0x00001a3a   0x00000002   PAD
    0x20000214   0x00001a3c   0x00000008   Data   RW           55    MyData11            11logiccontroller.o
    0x2000021c   0x00001a44   0x00000020   Data   RW           36    MyData7             7operationsaddandsub.o
    0x2000023c   0x00001a64   0x0000001c   Data   RW           40    MyData8             8addandsubdwordmacro.o


    Execution Region ER_ZI (Exec base: 0x20000258, Load base: 0x00001a80, Size: 0x00000400, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000258        -       0x00000400   Zero   RW            1    STACK               startup1.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       120         26          0          2          0        328   10bitwiseopandshifts.o
       112         10          0          8          0        312   11logiccontroller.o
        94          0          0          0          0        312   1simpleoperations.o
        36         10          0          0          0        284   2_32bitconst.o
      5034       5014          0          0          0        332   3forcedreservationltorg.o
        30         18          0          0          0        300   4reservationdirective.o
        88         18          0          0          0        316   5indirectaddressing.o
       184         54          0        126          0        344   6copyrom-ramwithloop.o
        60         14          0         32          0        312   7operationsaddandsub.o
       180         26          0         28          0        324   8addandsubdwordmacro.o
       168        102          0        400          0        332   9arithmeticopwithldm-stm.o
        12          6          0          0          0        264   main.o
        28          0          0          0          0        284   mult32us.o
         6          0          0          0          0        404   nmi.o
        12          6         12          0       1024        484   startup1.o

    ----------------------------------------------------------------------
      6172       5306         12        600       1024       4932   Object Totals
         0          0          0          0          0          0   (incl. Generated)
         8          2          0          4          0          0   (incl. Padding)

    ----------------------------------------------------------------------
         0          0          0          0          0          0   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6172       5306         12        600       1024       4832   Grand Totals
      6172       5306         12        600       1024       4832   ELF Image Totals
      6172       5306         12        600          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 6184 (   6.04kB)
    Total RW  Size (RW Data + ZI Data)              1624 (   1.59kB)
    Total ROM Size (Code + RO Data + RW Data)       6784 (   6.62kB)

==============================================================================

