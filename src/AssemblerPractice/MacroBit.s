; Макробиблиотека команд битового сопроцессора
;*********************************************************
; Загрузка бита с заданным номером в битовый аккумулятор
		MACRO
		L_Bit $A,$R,$N
		LSL $A,$R,#(31-$N)
		MEND
;*********************************************************	

;*********************************************************
; "Логическое И" бита с битовым аккумулятором
		MACRO
		AND_Bit $A,$R,$N
		ANDS $A,$R,LSL #(31-$N)
		MEND
;*********************************************************	
;*********************************************************
; "Логическое И НЕ" бита с битовым аккумулятором
		MACRO
		ANDN_Bit $A,$R,$N
		BICS $A,$R,LSL #(31-$N)
		MEND
;*********************************************************	
;*********************************************************
; "Логическое ИЛИ" бита с битовым аккумулятором
		MACRO
		ORR_Bit $A,$R,$N
		ORRS $A,$R,LSL #(31-$N)
		MEND
;*********************************************************	
;*********************************************************
; "Логическое ИЛИ НЕ" бита с битовым аккумулятором
		MACRO
		ORN_Bit $A,$R,$N
		ORNS $A,$R,LSL #(31-$N)
		MEND
;*********************************************************
;*********************************************************
; "Логическое Исключающее ИЛИ" бита с битовым аккумулятором
		MACRO
		EOR_Bit $A,$R,$N
		EORS $A,$R,LSL #(31-$N)
		MEND
;*********************************************************

;*********************************************************
; "Логическое НЕ" битового аккумулятора
		MACRO
		NOT_A $A
		MVNS $A,$A
		MEND
;*********************************************************

;*********************************************************
; Сохранить содержимое битового аккумулятора 
; в заданном бите регистра 
		MACRO
		S_Bit $A, $R, $N
		ORRMI $R,#(1<<$N) 
		BICPL $R,#(1<<$N)
		MEND
;*********************************************************

; Конец ассемблерного текста
		END