; Объявить кодовую секцию MyCode
				AREA MyCode10, CODE, ReadOnly
; Объявить точку входа в программу приложения	
				ENTRY
; Объвить точку входа глобальной переменной
				EXPORT BitwiseOpAndShifts
BitwiseOpAndShifts
		; Побитовые операции
;				B Variation_1
		; Логические сдвиги
;				B Variation_2
		; Реализация логического контроллера по таблице 
		; истинности системы логических функций
				B Variation_3
				
Back
				BX lr

Variation_1
; Демонстрация технологии маскирования бит
; и битовых полей
; Загрузить в регистр r0 начальные данные
				LDR r0, =0xFFAABB55
; Загрузить в регистр r1 маску	
				MOV r1, #0xFFFFFFF0
; Очистить младший нибл регистра r0
				AND r0, r1
; Очистить старший нибл регистра r0
				AND r0, r1, ROR #4
; Установить в "1" все разряды младшего нибла r0
				ORR r0, #2_00001111
; Установить в "1" все разряды старшего байта r0
				LDR r1, =0x0FFFFFFF
				ORN r0, r1
; Проинвертировать все биты регистра r0
				MVN r0, r0
; Установить 3-й бит регистра r0
				ORR r0, #0x00000008
; Очистить 3-й бит регистра r0
				AND r0, #0xFFFFFFF7
; Установить 3-й бит регистра r0 командой ORN
				ORN r0, #0xFFFFFFF7
; Очистить 7-й бит регистра r0 командой BIC
				BIC r0, #2_10000000

; Останов
				B Back
******************************************

Variation_2
; Использование команд пересылки с попутным сдвигом
; и эквивалентных им обычных команд сдвига
; Загрузить в регистр r1 начальные данные
				LDR r1,=0xFFAABB55
; Переслать в регистр r0 c предварительным
; логическим сдвигом на 8 разрдяов влево 
				MOV r0,r1, LSL #8
; Эквивалентная ей команда логического сдвига
				LSL r0,r1,#8
; Переслать в регистр r0 содержимое r1 с обменом
; местами старшего и младшего полуслов 
				MOV r0,r1,ROR #16
; Эквивалентная ей команда логического сдвига
				ROR r0,r1,#16
; Переслать в регистр r0 содержимое r1 с обменом
; данными в старшем и младшем байтах слова
; (средние байты могут быть изменены)
				MOV r0,r1,ROR #8
; Эквивалентная команда циклического сдвига			
				ROR r0,r1,#8
******************************************

Variation_3
; Реализация логического контроллера по таблице 
; истинности системы логических функций
LOG_CONTR
; Проиницилизировать базовый регистр r0
; начальным адресом таблицы истинности
				ADR r0, Tab_Ist
; Проинициализировать базовый регистр r1
; адресом порта ввода входных переменнх
				LDR r1, =X
; Проинициализировать базовый регистр r2
; адресом порта вывода управляющих воздействий
				LDR r2, =Y				
LOOP
; Получить текущее состояние входных переменных
; (вектор X)
				LDRB r3, [r1]
; Считать из таблицы истинности вектор выхода
				LDRB r4, [r0,r3]
; Выдать вектор выхода в порт вывода управляющих 
; воздействий
				STRB r4,[r2]
; Выполнить очередной скан расчета
				B LOOP

; Останов
				B Back
				
				ALIGN
; Резервироание места в кодовой памяти и инициализация
; таблицы истинности системы логических функций
Tab_Ist 
; Всего в таблице должно быть 256 байт данных
; (показано только начало таблицы - 10 байт)				
				DCB 	2_11000010
				DCB 	2_00001111
				DCB 	2_10111000
				DCB 	2_11000000
				DCB 	2_11011001
				DCB 	2_10101010
				DCB 	2_11011011
				DCB 	2_11011011
				DCB 	2_11011011
				DCB 	2_01111000
; 			...	
				ALIGN
; Объявление секции данных, в которой размещается
; порт ввода вектора X и вывода вектора Y 
				AREA MyData, DATA, ReadWrite
					
X 				SPACE 1
Y       		SPACE 1

; Конец ассемблерного текста
				END