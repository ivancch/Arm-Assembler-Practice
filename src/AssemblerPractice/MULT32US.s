; Объявить кодовую секцию MyCode
				AREA MyCodeMULT, CODE, ReadOnly
; Объвить имена подпрограмм глобальными переменными
				EXPORT MUL_U32_U32
				EXPORT MUL_S32_S32
; **************************************************************
; Подпрограмма попарного умножения 32-раздрядных слов массива
; чисел без знака с сохранением 64-разрядных произведений
; в оперативной памяти
; Входы: r0 - начальный адрес массива исходных слов
;        r1 - начальный адрес массива произведений в ОЗУ
;        r2 - число пар исходных слов (счетчик числа циклов)
;		 r12 - возвратный регистр для выхода из подпрограммы 
; Выход: Массив 64-битовых слов-произведений в ОЗУ
; Используемые регистры:
;        (r3,r4) - пара исходных 32-разрядных операндов
;        (r5,r6) - пара регистов для хранения произведения
;***************************************************************
MUL_U32_U32
; Загрузить очередную пару исходных слов в регистры (r3,r4)
; c авто- пост- инкременитрованием указателя r0
				LDM r0!, {r3,r4}
; Попарно умножить текущие слова без знака с сохранением
; произведения в регистрах (r5,r6)				
				UMULL r5, r6, r3, r4
; Сохранить текущее произведение в оперативной памяти с 
; пост- авто- инкрементированием указателя r1
				STM r1!, {r5,r6}
; Декрементировать счетчик числа циклов, и если не все
; операции умножения выполнены, - повторить 
				SUBS r2, #1
				BNE MUL_U32_U32
; Вернуться в основную программу
				BX r12
;---------------------------------------------------------------			

; **************************************************************
; Подпрограмма попарного умножения 32-раздрядных слов массива
; чисел со знаком с сохранением 64-разрядных произведений
; в оперативной памяти
; Входы: r0 - начальный адрес массива исходных слов
;        r1 - начальный адрес массива произведений в ОЗУ
;        r2 - число пар исходных слов (счетчик числа циклов)
;		 r12 - возвратный регистр для выхода из подпрограммы 
; Выход: Массив 64-битовых слов-произведений в ОЗУ
; Используемые регистры:
;        (r3,r4) - пара исходных 32-разрядных операндов
;        (r5,r6) - пара регистов для хранения произведения
;***************************************************************
MUL_S32_S32
; Загрузить очередную пару исходных слов в регистры (r3,r4)
; c авто- пост- инкременитрованием указателя r0
				LDM r0!,{r3,r4}
; Попарно умножить текущие слова со знаком с сохранением
; произведения в регистрах (r5,r6)				
				SMULL r5, r6, r3, r4
; Сохранить текущее произведение в оперативной памяти с 
; пост- авто- инкрементированием указателя r1
				STM r1!, {r5,r6}
; Декрементировать счетчик числа циклов, и если не все
; операции умножения выполнены, - повторить 
				SUBS r2, #1
				BNE MUL_S32_S32
; Вернуться в основную программу
				BX r12
;---------------------------------------------------------------	
; Конец ассемблерного текста
				END